<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Computación visual 2023-1</title><link>https://visualcomputing.github.io/showcase/docs/Visual-Illusions/Spatial-Coherence/</link><description>Recent content on Computación visual 2023-1</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://visualcomputing.github.io/showcase/docs/Visual-Illusions/Spatial-Coherence/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://visualcomputing.github.io/showcase/docs/Visual-Illusions/Spatial-Coherence/Pixelator-demo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing.github.io/showcase/docs/Visual-Illusions/Spatial-Coherence/Pixelator-demo/</guid><description>Ejercicio 5: Pixelador # 1. Introducción
Aunque a primera vista parece qeu pixelar una imagen sea un desproposito, lo cierto es que tiene aplicaciones muy utiles. Un ejemplo de esto es la censura por pixelado que busca ocultar información; Otro uso bastante popular es el de reducir el tamaño de las imagenes a cambio de perder algo de calidad para poder enviar archivos no tan pesados.
2. Solución
A continuación se pixela el mismo video utilizando dos tecnicas diferentes: Color averaging y Spatial coherence:</description></item></channel></rss>